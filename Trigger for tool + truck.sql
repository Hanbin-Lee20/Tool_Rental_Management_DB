/*
When user tried to modify TOOL_VIEW, the trigger will do the modification on tool subset tables(TOOL, TOOL_SERIAL and TOOL_VIEW_HISTORY) instead.
For every modification, it will be saved in TOOL_VIEW_HISTORY table, recording type of modification and current date.
*/
create or replace TRIGGER TOOL_VIEW_TRIGGER
INSTEAD OF INSERT OR UPDATE OR DELETE ON TOOL_VIEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO TOOL (TOOL_ID, NAME, BRAND_ID)
        VALUES (:NEW.TOOL_ID, :NEW.TOOL_NAME, NULL);

        INSERT INTO TOOL_SERIAL (SERIAL_ID, TOOL_ID, SERIAL_NUMBER, CATEGORY_ID, STARTTIME, ENDTIME)
        VALUES (TOOL_SERIAL_SEQ.NEXTVAL, :NEW.TOOL_ID, :NEW.SERIAL_NUMBER, NULL, SYSTIMESTAMP, NULL);

        INSERT INTO TOOL_VIEW_HISTORY (HISTORY_ID, TOOL_ID, TOOL_NAME, SERIAL_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TOOL_VIEW_HISTORY_SEQ.NEXTVAL, :NEW.TOOL_ID, :NEW.TOOL_NAME, :NEW.SERIAL_NUMBER, 'INSERT', SYSTIMESTAMP);
    ELSIF UPDATING THEN
        UPDATE TOOL SET NAME = :NEW.TOOL_NAME
        WHERE TOOL_ID = :OLD.TOOL_ID;

        UPDATE TOOL_SERIAL SET SERIAL_NUMBER = :NEW.SERIAL_NUMBER, ENDTIME = SYSTIMESTAMP
        WHERE TOOL_ID = :OLD.TOOL_ID AND ENDTIME IS NULL;

        INSERT INTO TOOL_SERIAL (SERIAL_ID, TOOL_ID, SERIAL_NUMBER, CATEGORY_ID, STARTTIME, ENDTIME)
        VALUES (TOOL_SERIAL_SEQ.NEXTVAL, :NEW.TOOL_ID, :NEW.SERIAL_NUMBER, NULL, SYSTIMESTAMP, NULL);

        INSERT INTO TOOL_VIEW_HISTORY (HISTORY_ID, TOOL_ID, TOOL_NAME, SERIAL_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TOOL_VIEW_HISTORY_SEQ.NEXTVAL, :NEW.TOOL_ID, :NEW.TOOL_NAME, :NEW.SERIAL_NUMBER, 'UPDATE', SYSTIMESTAMP);
    ELSIF DELETING THEN
        DELETE FROM TOOL WHERE TOOL_ID = :OLD.TOOL_ID;
        UPDATE TOOL_SERIAL SET ENDTIME = SYSTIMESTAMP
        WHERE TOOL_ID = :OLD.TOOL_ID AND ENDTIME IS NULL;

        INSERT INTO TOOL_VIEW_HISTORY (HISTORY_ID, TOOL_ID, TOOL_NAME, SERIAL_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TOOL_VIEW_HISTORY_SEQ.NEXTVAL, :OLD.TOOL_ID, :OLD.TOOL_NAME, NULL, 'DELETE', SYSTIMESTAMP);
    END IF;
END;


/*
Same trigger on TRUCK_VIEW.
For every modification, its detail will be saved in TRUCK_VIEWHISTORY.
*/
create or replace TRIGGER TRUCK_VIEW_TRIGGER
INSTEAD OF INSERT OR UPDATE OR DELETE ON TRUCK_VIEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO TRUCK (TRUCK_ID, TRUCK_NAME, BRAND_ID)
        VALUES (:NEW.TRUCK_ID, :NEW.TRUCK_NAME, NULL);

        INSERT INTO TRUCK_PLATE_NUMBER (PLATE_NUMBER_ID, TRUCK_ID, LICENSE_PLATE_NUMBER, CATEGORY_ID, STARTTIME, ENDTIME)
        VALUES (TRUCK_PLATE_NUMBER_SEQ.NEXTVAL, :NEW.TRUCK_ID, :NEW.LICENSE_PLATE_NUMBER, NULL, SYSTIMESTAMP, NULL);

        INSERT INTO TRUCK_VIEW_HISTORY (HISTORY_ID, TRUCK_ID, TRUCK_NAME, LICENSE_PLATE_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TRUCK_VIEW_HISTORY_SEQ.NEXTVAL, :NEW.TRUCK_ID, :NEW.TRUCK_NAME, :NEW.LICENSE_PLATE_NUMBER, 'INSERT', SYSTIMESTAMP);
    ELSIF UPDATING THEN
        UPDATE TRUCK SET TRUCK_NAME = :NEW.TRUCK_NAME
        WHERE TRUCK_ID = :OLD.TRUCK_ID;

        UPDATE TRUCK_PLATE_NUMBER SET LICENSE_PLATE_NUMBER = :NEW.LICENSE_PLATE_NUMBER, ENDTIME = SYSTIMESTAMP
        WHERE TRUCK_ID = :OLD.TRUCK_ID AND ENDTIME IS NULL;

        INSERT INTO TRUCK_PLATE_NUMBER (PLATE_NUMBER_ID, TRUCK_ID, LICENSE_PLATE_NUMBER, CATEGORY_ID, STARTTIME, ENDTIME)
        VALUES (TRUCK_PLATE_NUMBER_SEQ.NEXTVAL, :NEW.TRUCK_ID, :NEW.LICENSE_PLATE_NUMBER, NULL, SYSTIMESTAMP, NULL);

        INSERT INTO TRUCK_VIEW_HISTORY (HISTORY_ID, TRUCK_ID, TRUCK_NAME, LICENSE_PLATE_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TRUCK_VIEW_HISTORY_SEQ.NEXTVAL, :NEW.TRUCK_ID, :NEW.TRUCK_NAME, :NEW.LICENSE_PLATE_NUMBER, 'UPDATE', SYSTIMESTAMP);
    ELSIF DELETING THEN
        DELETE FROM TRUCK WHERE TRUCK_ID = :OLD.TRUCK_ID;
        UPDATE TRUCK_PLATE_NUMBER SET ENDTIME = SYSTIMESTAMP
        WHERE TRUCK_ID = :OLD.TRUCK_ID AND ENDTIME IS NULL;

        INSERT INTO TRUCK_VIEW_HISTORY (HISTORY_ID, TRUCK_ID, TRUCK_NAME, LICENSE_PLATE_NUMBER, CHANGE_TYPE, CHANGE_TIMESTAMP)
        VALUES (TRUCK_VIEW_HISTORY_SEQ.NEXTVAL, :OLD.TRUCK_ID, :OLD.TRUCK_NAME, NULL, 'DELETE', SYSTIMESTAMP);
    END IF;
END;